<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.web.controller.sen.mapper.CourseCommentReplyMapper">

    <resultMap type="com.sen.web.controller.sen.domain.CourseCommentReply" id="CourseCommentReplyResult">
        <id     property="id"        column="id"         />
        <result property="commentId" column="comment_id" />
        <result property="userId"    column="user_id"    />
        <result property="content" column="content" />
        <result property="createTime" column="create_time" />
        <result property="userName"  column="username"  />
    </resultMap>

    <sql id="selectCourseCommentReplyVo">
        select r.id, r.comment_id, r.user_id, r.content, r.create_time,
               u.username
        from course_comment_reply r
                 left join user u on r.user_id = u.id
    </sql>

    <select id="selectCourseCommentReplyList" parameterType="com.sen.web.controller.sen.domain.CourseCommentReply" resultMap="CourseCommentReplyResult">
        <include refid="selectCourseCommentReplyVo"/>
        <where>
            <if test="commentId != null "> and r.comment_id = #{commentId}</if>
            <if test="userId != null "> and r.user_id = #{userId}</if>
            <if test="replyText != null  and replyText != ''"> and r.reply_text like concat('%', #{replyText}, '%')</if>
        </where>
        order by r.create_time desc
    </select>

    <select id="selectCourseCommentReplyByCommentId" parameterType="Long" resultMap="CourseCommentReplyResult">
        <include refid="selectCourseCommentReplyVo"/>
        where r.comment_id = #{commentId}
        order by r.create_time desc
    </select>

    <insert id="insertCourseCommentReply" parameterType="com.sen.web.controller.sen.domain.CourseCommentReply" useGeneratedKeys="true" keyProperty="id">
        insert into course_comment_reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">comment_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="replyText != null">reply_text,</if>
            <if test="createdAt != null">created_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">#{commentId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="replyText != null">#{replyText},</if>
            <if test="createdAt != null">#{createdAt},</if>
        </trim>
    </insert>

    <delete id="deleteCourseCommentReplyById" parameterType="Long">
        delete from course_comment_reply where id = #{id}
    </delete>

    <delete id="deleteCourseCommentReplyByIds" parameterType="String">
        delete from course_comment_reply where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteCourseCommentReplyByCommentId" parameterType="Long">
        delete from course_comment_reply where comment_id = #{commentId}
    </delete>
</mapper>