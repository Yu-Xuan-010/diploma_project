<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.web.controller.sen.mapper.CategoryMapper">
    
    <resultMap type="Category" id="CategoryResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="parentId"    column="parent_id"    />
        <result property="description"    column="description"    />
        <result property="sortOrder"    column="sort_order"    />
    </resultMap>

    <resultMap id="CategoryCourseResult" type="Category" extends="CategoryResult">
        <collection property="courseList" ofType="Course" column="id" select="selectCourseList" />
    </resultMap>

    <resultMap type="Course" id="CourseResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="categoryId"    column="category_id"    />
        <result property="image"    column="image"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="averageRating"    column="average_rating"    />
        <result property="status"    column="status"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="studentCount"    column="student_count"    />
    </resultMap>

    <sql id="selectCategoryVo">
        select id, name, parent_id, description, sort_order from category
    </sql>

    <select id="selectCategoryList" parameterType="Category" resultMap="CategoryResult">
        <include refid="selectCategoryVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="description != null  and description != ''"> and description like concat('%', #{description}, '%')</if>
        </where>
    </select>
    
    <select id="selectCategoryById" parameterType="Long" resultMap="CategoryCourseResult">
        select id, name, parent_id, description, sort_order
        from category
        where id = #{id}
    </select>

    <select id="selectCourseList" resultMap="CourseResult">
        select id, name, description, category_id, image, created_at, updated_at, average_rating, status, teacher_id, student_count
        from course
        where category_id = #{category_id}
    </select>

    <insert id="insertCategory" parameterType="Category" useGeneratedKeys="true" keyProperty="id">
        insert into category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="description != null">description,</if>
            <if test="sortOrder != null">sort_order,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="description != null">#{description},</if>
            <if test="sortOrder != null">#{sortOrder},</if>
         </trim>
    </insert>

    <update id="updateCategory" parameterType="Category">
        update category
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="description != null">description = #{description},</if>
            <if test="sortOrder != null">sort_order = #{sortOrder},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCategoryById" parameterType="Long">
        delete from category where id = #{id}
    </delete>

    <delete id="deleteCategoryByIds" parameterType="String">
        delete from category where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteCourseByCategoryIds" parameterType="String">
        delete from course where category_id in 
        <foreach item="categoryId" collection="array" open="(" separator="," close=")">
            #{categoryId}
        </foreach>
    </delete>

    <delete id="deleteCourseByCategoryId" parameterType="Long">
        delete from course where category_id = #{categoryId}
    </delete>

    <insert id="batchCourse">
        insert into course( id, name, description, category_id, image, created_at, updated_at, average_rating, status, teacher_id, student_count) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.name}, #{item.description}, #{item.categoryId}, #{item.image}, #{item.createdAt}, #{item.updatedAt}, #{item.averageRating}, #{item.status}, #{item.teacherId}, #{item.studentCount})
        </foreach>
    </insert>
</mapper>