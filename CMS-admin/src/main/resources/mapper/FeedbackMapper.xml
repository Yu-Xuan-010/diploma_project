<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.web.controller.sen.mapper.FeedbackMapper">
    
    <resultMap type="com.sen.web.controller.sen.domain.Feedback" id="FeedbackResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="courseId" column="course_id"/>
        <result property="rating" column="rating"/>
        <result property="comment" column="comment"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="courseName" column="course_name"/>
        <result property="userName" column="user_name"/>
    </resultMap>

    <sql id="selectFeedbackVo">
        select f.id, f.user_id, f.course_id, f.rating, f.comment, f.created_at, f.updated_at,
        c.name as course_name, u.user_name
        from feedback f
        left join course c on f.course_id = c.id
        left join sys_user u on f.user_id = u.user_id
    </sql>

    <select id="selectSenFeedbackList" parameterType="com.sen.web.controller.sen.domain.Feedback" resultMap="FeedbackResult">
        <include refid="selectFeedbackVo"/>
        <where>
            <if test="userId != null">
                AND f.user_id = #{userId}
            </if>
            <if test="courseId != null">
                AND f.course_id = #{courseId}
            </if>
            <if test="rating != null">
                AND f.rating = #{rating}
            </if>
            <if test="comment != null and comment != ''">
                AND f.comment like concat('%', #{comment}, '%')
            </if>
            <if test="courseName != null and courseName != ''">
                AND c.name like concat('%', #{courseName}, '%')
            </if>
            <if test="userName != null and userName != ''">
                AND u.user_name like concat('%', #{userName}, '%')
            </if>
        </where>
        order by f.created_at desc
    </select>
    
    <select id="selectSenFeedbackById" parameterType="Long" resultMap="FeedbackResult">
        <include refid="selectFeedbackVo"/>
        where f.id = #{id}
    </select>
        
    <insert id="insertSenFeedback" parameterType="com.sen.web.controller.sen.domain.Feedback" useGeneratedKeys="true" keyProperty="id">
        insert into feedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="courseId != null">course_id,</if>
            <if test="rating != null">rating,</if>
            <if test="comment != null">comment,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="rating != null">#{rating},</if>
            <if test="comment != null">#{comment},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateSenFeedback" parameterType="com.sen.web.controller.sen.domain.Feedback">
        update feedback
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="rating != null">rating = #{rating},</if>
            <if test="comment != null">comment = #{comment},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSenFeedbackById" parameterType="Long">
        delete from feedback where id = #{id}
    </delete>

    <delete id="deleteSenFeedbackByIds" parameterType="String">
        delete from feedback where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertFeedbackReply" parameterType="map">
        insert into feedback_reply (feedback_id, reply_by, reply_text)
        values (#{feedbackId}, #{replyBy}, #{replyText})
    </insert>
</mapper>
